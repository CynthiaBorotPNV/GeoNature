:py:mod:`geonature.core.gn_commons.models.additional_fields`
============================================================

.. py:module:: geonature.core.gn_commons.models.additional_fields

.. autoapi-nested-parse::

   Modèles du schéma gn_commons



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   geonature.core.gn_commons.models.additional_fields.TAdditionalFields




.. py:class:: TAdditionalFields


   Bases: :py:obj:`geonature.utils.env.DB.Model`

   The base class of the :attr:`.SQLAlchemy.Model` declarative model class.

   To define models, subclass :attr:`db.Model <.SQLAlchemy.Model>`, not this. To
   customize ``db.Model``, subclass this and pass it as ``model_class`` to
   :class:`.SQLAlchemy`. To customize ``db.Model`` at the metaclass level, pass an
   already created declarative model class as ``model_class``.

   .. py:attribute:: __tablename__
      :value: 't_additional_fields'

      

   .. py:attribute:: __table_args__

      

   .. py:attribute:: id_field

      

   .. py:attribute:: field_name

      

   .. py:attribute:: field_label

      

   .. py:attribute:: required

      

   .. py:attribute:: description

      

   .. py:attribute:: quantitative

      

   .. py:attribute:: unity

      

   .. py:attribute:: field_values

      

   .. py:attribute:: code_nomenclature_type

      

   .. py:attribute:: additional_attributes

      

   .. py:attribute:: id_widget

      

   .. py:attribute:: id_list

      

   .. py:attribute:: exportable

      

   .. py:attribute:: field_order

      

   .. py:attribute:: type_widget

      

   .. py:attribute:: bib_nomenclature_type

      

   .. py:attribute:: additional_attributes

      

   .. py:attribute:: multiselect

      

   .. py:attribute:: api

      

   .. py:attribute:: default_value

      

   .. py:attribute:: modules

      

   .. py:attribute:: objects

      

   .. py:attribute:: datasets

      

   .. py:method:: __str__()

      Return str(self).



